{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/main-page/main-page.component.css","webpack:///./src/app/main-page/main-page.component.html","webpack:///./src/app/main-page/main-page.component.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/registration/registration.component.css","webpack:///./src/app/user/registration/registration.component.html","webpack:///./src/app/user/registration/registration.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MainPageComponent } from './main-page/main-page.component';\n\nconst routes: Routes = [\n {path: '', redirectTo:'', pathMatch:'full', component: MainPageComponent},\n {path: 'user', component: UserComponent,\n children: [\n  {path: 'registration', component: RegistrationComponent},\n  {path: 'login', component: LoginComponent},\n  {path: '**', redirectTo:'/user/login'},\n ]\n},\n{path: 'myacc', component: HomeComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'SportWebsite';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { UserService } from './shared/user.service';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { HeaderComponent } from './header/header.component';\nimport { MainPageComponent } from './main-page/main-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent,\n    HeaderComponent,\n    MainPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FormsModule\n  ],\n  providers: [UserService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n    \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('token')!=null)\n    return true;\n    else{\n    this.router.navigate(['/user/login']);\n    return false;\n    }\n  }\n  isAuthenticated(){\n    return localStorage.getItem('token') !=null;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {tap} from \"rxjs/operators\"\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n\r\n    constructor(private router: Router) {   }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n        if(localStorage.getItem('token')!=null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization','Bearer ' + localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ =>{},\r\n                    err =>{\r\n                        if(err.status == 401){\r\n                        localStorage.removeItem('token');\r\n                        this.router.navigateByUrl('/user/login');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n        return next.handle(req.clone());\r\n    }\r\n}","module.exports = \".navbar-header{\\r\\n    width:100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhci1oZWFkZXJ7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gIH0iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand text-white\\\">CallisthEDIcs</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n     <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home \\n            <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n     </ul>\\n     <ul class=\\\"navbar-nav mr-right\\\">\\n       <ng-template [ngIf]=\\\"!authGuard.isAuthenticated()\\\">\\n          <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/user/login\\\">Login</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/user/registration\\\">Register</a>\\n          </li>\\n       </ng-template>\\n       <ng-template [ngIf]=\\\"authGuard.isAuthenticated()\\\">\\n          <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/myacc\\\">My Account</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n              <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"onLogout()\\\">Logout</a>\\n        </ng-template>\\n     </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router, private authGuard: AuthGuard) { }\n\n  ngOnInit() {\n  }\n\n  \n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card m-5\\\" style=\\\"width: 18rem\\\" *ngIf=\\\"userDetails\\\">\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\"><strong>Username: </strong>{{userDetails.userName}}</li>\\n  <li class=\\\"list-group-item\\\"><strong>Name: </strong>{{userDetails.fullName}}</li>\\n  <li class=\\\"list-group-item\\\"><strong>Email: </strong>{{userDetails.email}}</li>\\n</ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nuserDetails;\n\n  constructor(private router: Router, private service: UserService) { }\n\n  ngOnInit() {\n  this.service.getUserProfile().subscribe(\n    res =>{\n      this.userDetails = res;   \n     },\n    err => {\n      console.log(err);\n    },\n  );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tcGFnZS9tYWluLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n    <ol class=\\\"carousel-indicators\\\">\\n        <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n        <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n        <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n        <div class=\\\"carousel-item active\\\">\\n            <img class=\\\"d-block w-100\\\" src=\\\"/assets/img/file1.jpg\\\" alt=\\\"First slide\\\">\\n        </div>\\n        <div class=\\\"carousel-item\\\">\\n            <img class=\\\"d-block w-100\\\" src=\\\"/assets/img/file2.jpg\\\" alt=\\\"Second slide\\\">\\n        </div>\\n        <div class=\\\"carousel-item\\\">\\n            <img class=\\\"d-block w-100\\\" src=\\\"/assets/img/file3.jpg\\\" alt=\\\"Third slide\\\">\\n        </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n        <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"sr-only\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n        <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"sr-only\\\">Next</span>\\n    </a>\\n</div>\\n<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">CalisthEDIcs</h1>\\n    <p class=\\\"lead\\\">Easy program, easy gains</p>\\n  </div>\\n</div>\\n<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Blablablalbal</h1>\\n    <p class=\\\"lead\\\">Blablablalbalblalablalblablablalballabalbalbalbalalblalbalalablabalalbl</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private fb:FormBuilder, private http: HttpClient) { }\n  readonly BaseURI = 'http://localhost:62418/api';\n\n  formModel = this.fb.group({\n    UserName : ['', Validators.required],\n    Email : ['', [Validators.required, Validators.email]],\n    FullName : [''],\n    Passwords : this.fb.group({\n      Password : ['', [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword : ['',Validators.required]\n    },{validator : this.comparePasswords })\n   \n  });\n\n  comparePasswords(fb: FormGroup){\n    let confirmPasswordCtrl = fb.get('ConfirmPassword');\n    if(confirmPasswordCtrl.errors == null || 'passwordMismatch' in confirmPasswordCtrl.errors){\n      if(fb.get('Password').value!= confirmPasswordCtrl.value)\n        confirmPasswordCtrl.setErrors({passwordMismatch: true});\n      else\n        confirmPasswordCtrl.setErrors(null);\n    }\n  }\n\n  register(){\n    var body = {\n      UserName: this.formModel.value.UserName,\n      Email: this.formModel.value.Email,\n      FullName: this.formModel.value.FullName,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(this.BaseURI +'/ApplicationUser/Register', body);\n  }\n\n  login(formData){\n    return this.http.post(this.BaseURI +'/ApplicationUser/Login', formData);\n  }\n\n  getUserProfile() {\n    return this.http.get(this.BaseURI + '/UserProfile');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<img src=\\\"/assets/img/justpic.png\\\" class=\\\" img-fluid d-block\\\">\\n<form #form='ngForm' class=\\\"mb-4\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"formModel.UserName\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" #Password=\\\"ngModel\\\" name=\\\"Password\\\" [(ngModel)]=\\\"formModel.Password\\\" required>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"form.invalid\\\">Login</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nformModel={\n  UserName: '',\n  Password: ''\n}\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if(localStorage.getItem('token')!=null)\n    this.router.navigateByUrl('/myacc')\n  }\n\n  onSubmit(form : NgForm) {\n    this.service.login(form.value).subscribe(\n      (res:any) =>{\n        localStorage.setItem('token', res.token);\n        this.router.navigateByUrl('/myacc'); //make the main page of user with settings of the account \n      },\n      err => {\n        if(err.status == 400)\n        this.toastr.error(\"Incorrect username or password\", \"Authentication failed\");\n        else\n        console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n<div class=\\\"form-group required\\\">\\n  <label>Username</label>\\n  <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\n  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('UserName').touched && service.formModel.get('UserName').errors?.required\\\">This field is mandatory.</label>\\n</div>\\n<div class=\\\"form-group required\\\">\\n  <label>Email</label>\\n  <input class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\n  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email\\\">Invalid email address.</label>\\n  <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.required\\\">This field is mandatory.</label>\\n</div>\\n<div class=\\\"form-group\\\">\\n  <label>Full Name</label>\\n  <input class=\\\"form-control\\\" formControlName=\\\"FullName\\\">\\n</div>\\n<div formGroupName=\\\"Passwords\\\">\\n  <div class=\\\"form-group required\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.required\\\">This field is mandatory.</label>\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.minlength\\\">Minimum 6 characters required.</label>\\n  </div>\\n  <div class=\\\"form-group required\\\">\\n    <label>Confirm Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.required\\\">This field is mandatory.</label>\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\\\">Password does not match.</label>\\n  </div>\\n</div>\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Sign Up</button>\\n  </div>\\n</div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public service: UserService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.formModel.reset()\n  }\n\n  onSubmit(){\n    this.service.register().subscribe(\n      (res: any) => {\n        if(res.succeeded) {\n          this.service.formModel.reset()\n          this.toastr.success(\"New user created\", \"Registration successful\")\n        }else {\n          res.errors.forEach(element => {\n            switch(element.code) {\n              case 'DuplicateUserName':\n               this.toastr.error(\"Username is already taken\",\"Registration failed\")\n              break;\n\n              default:\n              this.toastr.error(element.description,\"Registration failed\")\n              break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <h2 routerLink='/user/login' routerLinkActive='active'>Sign In</h2>\\n      <h2 routerLink='/user/registration' routerLinkActive='active'>Sign Up</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}